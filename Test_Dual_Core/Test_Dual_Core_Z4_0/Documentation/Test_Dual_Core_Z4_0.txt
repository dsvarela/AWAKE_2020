=============================================================================
List of generated methods in project: Test_Dual_Core_Z4_0

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "pin_mux"   (component PinSettings)
   - pin_mux_PINS_DRV_Init -This function configures the pins with the options provided in the provided structure
   - pin_mux_PINS_DRV_SetPullSel -This function configures the internal resistor
   - pin_mux_PINS_DRV_SetOutputBuffer -This function configures the output buffer
   - pin_mux_PINS_DRV_SetInputBuffer -This function configures the input buffer
   - pin_mux_PINS_DRV_ConfigIntFilterClock -This function configures the interrupt filter clock prescaler
   - pin_mux_PINS_DRV_SetExInt -This function configures the external interrupt
   - pin_mux_PINS_DRV_ClearPinExIntFlag -This function clears the individual pin external interrupt status flag
   - pin_mux_PINS_DRV_GetPinExIntFlag -This function gets the individual pin external interrupt status flag
   - pin_mux_PINS_DRV_ClearExIntFlag -This function clears the entire external interrupt status flag
   - pin_mux_PINS_DRV_GetExIntFlag -This function gets the individual pin external interrupt status flag
   - pin_mux_PINS_DRV_WritePin -This function writes the given pin from a port, with the given value ('0' represents LOW, '1' 
                represents HIGH)
   - pin_mux_PINS_DRV_WritePins -This function writes all pins configured as output with the values given in the parameter pins.
                '0' represents LOW, '1' represents HIGH
   - pin_mux_PINS_DRV_GetPinsOutput -This function returns the current output that is written to a port. Only pins that are 
                configured as output will have meaningful values
   - pin_mux_PINS_DRV_SetPins -This function configures output pins listed in parameter pins (bits that are '1') to have a 
                value of 'set' (HIGH). Pins corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_ClearPins -This function configures output pins listed in parameter pins (bits that are '1') to have a 
                'cleared' value (LOW). Pins corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_TogglePins -This function toggles output pins listed in parameter pins (bits that are '1'). Pins 
                corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_ReadPins -This function returns the current input values from a port. Only pins configured as input will 
                have meaningful values

Module "clockMan1" (component clock_manager)
   - clockMan1_CLOCK_DRV_Init -Initialize clocking modules
   - clockMan1_CLOCK_DRV_GetFreq -Return frequency.

Module "intMan1"   (component interrupt_manager)
   - intMan1_INT_SYS_InstallHandler -Installs an interrupt handler routine for a given IRQ number.
   - intMan1_INT_SYS_EnableIRQ -Enables an interrupt for a given IRQ number.
   - intMan1_INT_SYS_DisableIRQ -Disables an interrupt for a given IRQ number.
   - intMan1_INT_SYS_EnableIRQGlobal -Enables system interrupt.
   - intMan1_INT_SYS_DisableIRQGlobal -Disable system interrupt.
   - intMan1_INT_SYS_SetPriority -Set Interrupt Priority.
   - intMan1_INT_SYS_GetPriority -Get Interrupt Priority.
   - intMan1_INT_SYS_SetSoftwareIRQRequest -Set software interrupt request.
   - intMan1_INT_SYS_ClearSoftwareIRQRequest -Clear software interrupt request.
   - intMan1_INT_SYS_EnableIRQ_MC -Enables an interrupt for a given IRQ number, on the given cores.
   - intMan1_INT_SYS_GetCoresForIRQ -Gets the cores on which an interrupt for the specified IRQ number is enabled.
   - intMan1_INT_SYS_DisableIRQ_MC -Disables an interrupt for a given IRQ number, on the given cores.
   - intMan1_INT_SYS_DisableIRQ_MC_All -Disables an interrupt for a given IRQ number, on all cores.

Module "pit1"      (component pit)
   - pit1_PIT_DRV_GetDefaultConfig -Gets default PIT module configuration structure
   - pit1_PIT_DRV_GetDefaultChanConfig -Gets default timer channel configuration structure
   - pit1_PIT_DRV_Init -Initializes the PIT module.
   - pit1_PIT_DRV_Deinit -De-initializes PIT module.
   - pit1_PIT_DRV_InitChannel -Initializes the PIT channel.
   - pit1_PIT_DRV_ConfigChannel -Sets the timer channel period in microseconds or count base on period unit argument
   - pit1_PIT_DRV_StartChannel -Starts the timer channel counting.
   - pit1_PIT_DRV_StopChannel -Stops the timer channel counting.
   - pit1_PIT_DRV_SetTimerPeriodByUs -Sets the timer channel period in microseconds.
   - pit1_PIT_DRV_GetCurrentTimerUs -Gets the current timer channel counting value in microseconds.
   - pit1_PIT_DRV_SetTimerPeriodByCount -Sets the timer channel period in count unit.
   - pit1_PIT_DRV_GetCurrentTimerCount -Gets the current timer channel counting value in count.
   - pit1_PIT_DRV_SetLifetimeTimerCount -Build the 64-bit lifetimer
   - pit1_PIT_DRV_GetLifetimeTimerCount -Reads the current lifetime counter value
   - pit1_PIT_DRV_GetLifetimeTimerUs -Reads the current lifetime value in microseconds.
   - pit1_PIT_DRV_EnableChannelInterrupt -Enable interrupt generation of timer channel when timeout occurs
   - pit1_PIT_DRV_DisableChannelInterrupt -Disable interrupt generation of timer channel when timeout occurs
   - pit1_PIT_DRV_GetStatusFlags -Gets the current interrupt flag of timer channel.
   - pit1_PIT_DRV_ClearStatusFlags -Clears the interrupt flag of timer channel.

Module "Cpu"       (component MPC5748G_324)
   - Cpu_SystemInit -This method configures the oscillator (PLL) that is part of the microcontroller device. SystemInit is 
                called from startup_device file.
   - Cpu_SystemCoreClockUpdate -SystemCoreClockUpdate evaluates the clock register settings and calculates the current core 
                clock.
   - Cpu_SystemSoftwareReset -This method initiates a software rest of the microcontroller.

===================================================================================
