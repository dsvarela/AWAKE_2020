=============================================================================
List of generated methods in project: AWAKE_DUO_Z4_0

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "pin_mux"   (component PinSettings)
   - pin_mux_PINS_DRV_Init -This function configures the pins with the options provided in the provided structure
   - pin_mux_PINS_DRV_SetPullSel -This function configures the internal resistor
   - pin_mux_PINS_DRV_SetOutputBuffer -This function configures the output buffer
   - pin_mux_PINS_DRV_SetInputBuffer -This function configures the input buffer
   - pin_mux_PINS_DRV_ConfigIntFilterClock -This function configures the interrupt filter clock prescaler
   - pin_mux_PINS_DRV_SetExInt -This function configures the external interrupt
   - pin_mux_PINS_DRV_ClearPinExIntFlag -This function clears the individual pin external interrupt status flag
   - pin_mux_PINS_DRV_GetPinExIntFlag -This function gets the individual pin external interrupt status flag
   - pin_mux_PINS_DRV_ClearExIntFlag -This function clears the entire external interrupt status flag
   - pin_mux_PINS_DRV_GetExIntFlag -This function gets the individual pin external interrupt status flag
   - pin_mux_PINS_DRV_WritePin -This function writes the given pin from a port, with the given value ('0' represents LOW, '1' 
                represents HIGH)
   - pin_mux_PINS_DRV_WritePins -This function writes all pins configured as output with the values given in the parameter pins.
                '0' represents LOW, '1' represents HIGH
   - pin_mux_PINS_DRV_GetPinsOutput -This function returns the current output that is written to a port. Only pins that are 
                configured as output will have meaningful values
   - pin_mux_PINS_DRV_SetPins -This function configures output pins listed in parameter pins (bits that are '1') to have a 
                value of 'set' (HIGH). Pins corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_ClearPins -This function configures output pins listed in parameter pins (bits that are '1') to have a 
                'cleared' value (LOW). Pins corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_TogglePins -This function toggles output pins listed in parameter pins (bits that are '1'). Pins 
                corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_ReadPins -This function returns the current input values from a port. Only pins configured as input will 
                have meaningful values

Module "clockMan1" (component clock_manager)
   - clockMan1_CLOCK_DRV_Init -Initialize clocking modules
   - clockMan1_CLOCK_DRV_GetFreq -Return frequency.

Module "intMan1"   (component interrupt_manager)
   - intMan1_INT_SYS_InstallHandler -Installs an interrupt handler routine for a given IRQ number.
   - intMan1_INT_SYS_EnableIRQ -Enables an interrupt for a given IRQ number.
   - intMan1_INT_SYS_DisableIRQ -Disables an interrupt for a given IRQ number.
   - intMan1_INT_SYS_EnableIRQGlobal -Enables system interrupt.
   - intMan1_INT_SYS_DisableIRQGlobal -Disable system interrupt.
   - intMan1_INT_SYS_SetPriority -Set Interrupt Priority.
   - intMan1_INT_SYS_GetPriority -Get Interrupt Priority.
   - intMan1_INT_SYS_SetSoftwareIRQRequest -Set software interrupt request.
   - intMan1_INT_SYS_ClearSoftwareIRQRequest -Clear software interrupt request.
   - intMan1_INT_SYS_EnableIRQ_MC -Enables an interrupt for a given IRQ number, on the given cores.
   - intMan1_INT_SYS_GetCoresForIRQ -Gets the cores on which an interrupt for the specified IRQ number is enabled.
   - intMan1_INT_SYS_DisableIRQ_MC -Disables an interrupt for a given IRQ number, on the given cores.
   - intMan1_INT_SYS_DisableIRQ_MC_All -Disables an interrupt for a given IRQ number, on all cores.

Module "eMIOS_Mc2" (component emios_mc)
   - eMIOS_Mc2_EMIOS_DRV_InitGlobal -Setup global prescaler
   - eMIOS_Mc2_EMIOS_DRV_EnableGlobalEmios -Start global eMIOS group
   - eMIOS_Mc2_EMIOS_DRV_DisableGlobalEmios -Disable global eMIOS group
   - eMIOS_Mc2_EMIOS_DRV_EnterLowPowerMode -Enter Low power mode.
   - eMIOS_Mc2_EMIOS_DRV_EscLowPowerMode -Escape low power mode to normal mode
   - eMIOS_Mc2_EMIOS_DRV_DisableOutputUpdate -Disable channel output update
   - eMIOS_Mc2_EMIOS_DRV_EnableAChOutputUpdate -Enable channel output update
   - eMIOS_Mc2_EMIOS_DRV_EnableAllChOutputUpdate -Enable all channels output update
   - eMIOS_Mc2_EMIOS_DRV_ChannelDisableClk -Disable a channel clock
   - eMIOS_Mc2_EMIOS_DRV_ChannelEnableClk -Enable a channel clock
   - eMIOS_Mc2_EMIOS_DRV_EnableAllChannelClk -Enable all channels clock
   - eMIOS_Mc2_EMIOS_DRV_ChannelSetupOutputDisable -Setup Output Disable mode. Available for channels 8, 9, 10 and 11.
   - eMIOS_Mc2_EMIOS_DRV_ChannelEnableDMARequest -Enable DMA request
   - eMIOS_Mc2_EMIOS_DRV_ChannelEnableInterruptRequest -Disable DMA request (assigned to interrupt request)
   - eMIOS_Mc2_EMIOS_DRV_ChannelDisableIsrRequest -Disallow the Unified Channel FLAG bit to generate an interrupt signal or a 
                DMA request signal.
   - eMIOS_Mc2_EMIOS_DRV_ChannelEnableIsrRequest -Allow the Unified Channel FLAG bit to generate an interrupt signal or a DMA 
                request signal
   - eMIOS_Mc2_EMIOS_DRV_ReadInputPinState -Reflects the input pin state after being filtered and synchronized.
   - eMIOS_Mc2_EMIOS_DRV_ReadOutputPinState -Reflects the output pin state
   - eMIOS_Mc2_EMIOS_DRV_DeInitChannel -Reset eMIOS channel to GPIO mode (reset default)
   - eMIOS_Mc2_EMIOS_DRV_MC_InitCounterMode -Initialize eMIOS Counter mode
   - eMIOS_Mc2_EMIOS_DRV_MC_SetCounterPeriod -Update new period value for counter mode
   - eMIOS_Mc2_EMIOS_DRV_MC_GetCounterPeriod -Read Counter period value in counter mode
   - eMIOS_Mc2_EMIOS_DRV_MC_CounterRead -Get current counter value in counter mode
   - eMIOS_Mc2_EMIOS_DRV_MC_CounterStart -Start counter, note that counter start automaticaly after initialization
   - eMIOS_Mc2_EMIOS_DRV_MC_CounterStop -Stop counter

Module "eMIOS_Pwm2" (component emios_pwm)
   - eMIOS_Pwm2_EMIOS_DRV_PWM_InitMode -Initialize PWM Mode
   - eMIOS_Pwm2_EMIOS_DRV_PWM_ForcePWMMatchLeadingEdge -Allow the software to force the output flip-flop to the level 
                corresponding to a match on leading edge. The FLAG bit is not set.
   - eMIOS_Pwm2_EMIOS_DRV_PWM_ForcePWMMatchTrailingEdge -Allow the software to force the output flip-flop to the level 
                corresponding to a match on trailing edge. The FLAG bit is not set.
   - eMIOS_Pwm2_EMIOS_DRV_PWM_GetPeriod -Get Period value in PWM mode
   - eMIOS_Pwm2_EMIOS_DRV_PWM_SetPeriod -Set new Period value in PWM mode
   - eMIOS_Pwm2_EMIOS_DRV_PWM_GetDutyCycle -Get Duty Cycle value in PWM mode
   - eMIOS_Pwm2_EMIOS_DRV_PWM_SetDutyCycle -Set new Duty Cycle value in PWM mode
   - eMIOS_Pwm2_EMIOS_DRV_PWM_GetLeadingEdgePlacement -Get Leading Edge Placement value in PWM mode
   - eMIOS_Pwm2_EMIOS_DRV_PWM_SetLeadingEdgePlacement -Set new Leading edge placement value in PWM mode
   - eMIOS_Pwm2_EMIOS_DRV_PWM_GetTrailingEdgePlacement -Get Trailing Edge Placement value in PWM mode
   - eMIOS_Pwm2_EMIOS_DRV_PWM_SetTrailingEdgePlacement -Set new Trailing edge placement value in PWM mode
   - eMIOS_Pwm2_EMIOS_DRV_PWM_SetCenterAlignDeadTime -Set new dead time value in PWM mode
   - eMIOS_Pwm2_EMIOS_DRV_PWM_GetCenterAlignDeadTime -Get dead time value in PWM mode
   - eMIOS_Pwm2_EMIOS_DRV_PWM_SetCenterAlignIdealDutyCycle -Set new Ideal duty cycle value in PWM mode
   - eMIOS_Pwm2_EMIOS_DRV_PWM_GetCenterAlignIdealDutyCycle -Get Ideal duty cycle value in PWM mode
   - eMIOS_Pwm2_EMIOS_DRV_PWM_SetTriggerPlacement -Set new Trigger Placement value in PWM mode
   - eMIOS_Pwm2_EMIOS_DRV_PWM_GetTriggerPlacement -Get Trigger Placement value in PWM mode

Module "Cpu"       (component MPC5748G_324)
   - Cpu_SystemInit -This method configures the oscillator (PLL) that is part of the microcontroller device. SystemInit is 
                called from startup_device file.
   - Cpu_SystemCoreClockUpdate -SystemCoreClockUpdate evaluates the clock register settings and calculates the current core 
                clock.
   - Cpu_SystemSoftwareReset -This method initiates a software rest of the microcontroller.

===================================================================================
